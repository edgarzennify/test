{"version":3,"sources":["..\\..\\./ClientApp/components/EditModal.tsx"],"names":[],"mappings":"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","file":"5.js","sourcesContent":["import * as React from \"react\";\r\nimport * as fa from \"./common/FontAwesome\";\r\nimport Modal from \"./common/Modal\";\r\nimport Details from \"./Details\";\r\nimport Grid, { Type } from \"./Grid\";\r\nimport Button from \"./common/Button\";\r\nimport Errors from \"./common/Errors\";\r\nimport { setStateAsync } from \"../lib/Helpers\";\r\n\r\nexport interface IEditModal\r\n{\r\n    onSave() : Promise<boolean>;\r\n    onCancel();\r\n    onModalChange: any;\r\n    parentDetails?: any;\r\n    childDetails?: any;\r\n    isOpen: boolean;\r\n    title: string;\r\n    description?: string;\r\n    childTitle?: string;\r\n    errors: string[];\r\n    closeDisabled: boolean;\r\n}\r\n\r\ninterface IEditModalState\r\n{\r\n    saving?: boolean;\r\n    closeDisabled: boolean;\r\n    parentDetails?: any;\r\n    childDetails?: any;\r\n}\r\n\r\nclass EditModal extends React.Component<IEditModal, IEditModalState> {\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            saving: false,\r\n            closeDisabled: false,\r\n            parentDetails: undefined,\r\n            childDetails: undefined\r\n        }\r\n        this.onSaving = this.onSaving.bind(this);\r\n    }\r\n\r\n    componentDidMount(): void\r\n    {\r\n        this.setState({ parentDetails: this.props.parentDetails, childDetails: this.props.childDetails, saving: false, closeDisabled: false });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps): void\r\n    {\r\n        if (!nextProps.isOpen)\r\n        {\r\n            this.setState({ saving: false, closeDisabled: false, parentDetails: undefined, childDetails: undefined });\r\n        } else\r\n        {\r\n            this.setState({ parentDetails: nextProps.parentDetails, childDetails: nextProps.childDetails, closeDisabled: nextProps.closeDisabled });\r\n        }\r\n    }\r\n\r\n    async onSaving()\r\n    {\r\n        await setStateAsync<IEditModalState>(this, { saving: true });\r\n        const didSave = await this.props.onSave();\r\n        if (!didSave)\r\n        {\r\n            await setStateAsync<IEditModalState>(this, { saving: false });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Modal show={this.props.isOpen}>\r\n                <Modal.Header>\r\n                    <div className=\"type\">{this.props.description}</div>\r\n                    <div className=\"description\">{this.props.title}</div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Errors errors={this.props.errors} />\r\n\r\n                    <Details onClick={() => { }} type={Type.Edit}\r\n                        data={this.state.parentDetails} />\r\n\r\n                    {this.props.childTitle != undefined && this.state.childDetails != undefined && this.state.childDetails.EditMetadata.Sections.length !== 0 ?\r\n                        <Grid onChange={this.props.onModalChange} data={this.state.childDetails} title={this.props.childTitle} type={Type.Edit} onAdd={() => { return null; }}\r\n                            onEdit={() => { return null }} onSelect={() => { return null }} showEdit={false} handleSelectAll={() => { }} loadingId={\"\"} />\r\n                        : null}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"btn\" onClick={this.onSaving} disabled={this.state.saving} loading={this.state.saving}>\r\n                        Save</Button>\r\n                    <Button className=\"btn\" disabled={this.state.saving && this.state.closeDisabled} onClick={this.props.onCancel}>Close</Button></Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditModal;\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/components/EditModal.tsx"],"sourceRoot":""}